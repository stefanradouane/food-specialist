import React, {useEffect, useState} from 'react';
import {createRoot} from 'react-dom/client';
import {Paginator} from './search-paginator';

const searchForm = document.querySelector(".search")

const searchControl = document.querySelector(".search__control")
const searchInput = document.querySelector(".search__input")


const Searchresults = () => {
    const [query, setQuery] = useState("");
    const [page, setPage] = useState(1);
    const [data, setData] = useState(null);
    const [loading, setLoading] = useState(true)

    const handleQuery = (e) => {
        e.preventDefault()
        console.log("test")
        console.log(searchInput.value)
        setQuery(searchInput.value)
        setPage(1)
        // console.dir(e.target[0].value)
    }

    const handlePaginator = (e) => {
        if(e.target.value == "next") {
            setPage(page + 1)
            
        } else if (e.target.value == "previous") {
            console.log(e.target.nextSibling)
            if(page > 1) {
                setPage(page - 1)
            }
        }
    }

    const previousButton = () => {
        console.log(page)
        if(page > 1) {
            return (<button onClick={handlePaginator} value="previous">Prev</button>)
        }
        return (<button onClick={handlePaginator} value="previous" disabled>Prev</button>)

    }


    useEffect(() => {
        // setLoading(true)
        const fetchData = async () => {
            const response = await fetch(`https://world.openfoodfacts.org/cgi/search.pl?search_terms=${query}&page=${page}&page_size=30&action=process&json=1`);
            if (!response.ok) {
                throw new Error("Network response was not ok");
            }
            setData(await response.json())
        }
        fetchData()
    }, [query, page])

    useEffect(() => {
        if(data == null) {
            return
        }
        setLoading(false);  
        searchControl.addEventListener("click", handleQuery)

        return () => {
            searchControl.removeEventListener("click", handleQuery)
        }
    }, [data]);


    if(loading){
        return <div>Loading...</div>
    }

    const names = () => {
    return data.products.map((product, i) => {return (<div key={i}>{product._id}:  </div>)})
    }

    console.log(data)

    return (<div>
        {names()}
        {Paginator(data.page_count ,data.count)}
        {/* <button onClick={handlePaginator} value="previous" disabled>Prev</button> */}
        {previousButton()}
        <button onClick={handlePaginator} value="next">Next</button>
    </div>)
}

if(resultsContainer){
    const root = createRoot(resultsContainer);
    root.render(<Searchresults />);
}


TO DO:
standaard query die producten filterd ofzo idk
Connectie maken met de databank van food.api
Producten tonen.
FIX paginator.
- Page = max // FIX PAGE + MAX => anders gaat pagina door naar Infinity
- Page == 1

ON QUERY CHANGE => set page = 1 (FIX double use)



Home pagina blobs
Detail pagina